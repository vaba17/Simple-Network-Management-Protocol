#!/usr/bin/python

from easysnmp import Session
import sys
import time


Fs = float(sys.argv[2])
Ts = 1/Fs

agentdetail =[]
agentdetail = sys.argv[1].split(":")

C2 = []
OIDs = ['1.3.6.1.2.1.1.3.0']
N = int(sys.argv[3]) +1
arg = len(sys.argv)
OIDs =OIDs + sys.argv[4:arg]
ut = []
session = Session(hostname = agentdetail[0], remote_port=agentdetail[1], community =agentdetail[2], version= 2, timeout=1, retries =1)
def func():
  #tick1=(time.time())
  #s = session.get(OIDs)
  #ut2 = []
  #C1 = []
  #typ = []
  #rate=[]
  #s = [x for x in s if x.value != 'NOSUCHINSTANCE']
  for i in range(1,len(s)):
    C1.append(int(s[i].value))
    ut2.append(time.time())
    typ.append(str(s[i].snmp_type))
    if j>0 and len(C2)>0:
      if(C1[i-1] < C2[i-1]):
        if(typ[i-1] == 'COUNTER'):
          C1[i-1] = (2**32) + C1[i-1]
        elif(typ[i-1] == 'COUNTER64'):
          C1[i-1] = (2**64) + C1[i-1]
      else:
        num = (C1[i-1] - C2[i-1])
        den =round((ut2[i-1] - ut[i-1]),1)
      rate.append(int(num/den))
  if j>0 and ut2 >0:
    print int(time.time()),"|",
    print "|".join(str(k) for k in rate)
    sys.stdout.flush()
  #tick2 = time.time()
  #runtime = (tick2-tick1)
  #ut = ut2
  #C2 = C1
  #time.sleep(Ts-runtime)


if int(sys.argv[3]) == int(-1):
  j=0
  while j>=0:
    tick1=(time.time())
    s = session.get(OIDs)
    ut2 = []
    C1 = []
    typ = []
    rate=[]
     
    s = [x for x in s if x.value != 'NOSUCHINSTANCE']
  
    func()
    tick2 = time.time()
    runtime = (tick2-tick1)
    ut = ut2
    C2 = C1
    time.sleep(Ts-runtime)
    j=j+1
else:
  for j in range(N):
      tick1=(time.time())
      s = session.get(OIDs)
      ut2 = []
      C1 = []
      typ = []
      rate=[]
      s = [x for x in s if x.value != 'NOSUCHINSTANCE']
      func()
      tick2 = time.time()
      runtime = (tick2-tick1)
      ut = ut2
      C2 = C1
      time.sleep(Ts-runtime)
